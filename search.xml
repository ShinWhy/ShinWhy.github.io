<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title></title>
      <link href="/2023/05/20/DB_PhiscalDatabases/"/>
      <url>/2023/05/20/DB_PhiscalDatabases/</url>
      
        <content type="html"><![CDATA[]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title></title>
      <link href="/2023/05/20/oral%20expression/"/>
      <url>/2023/05/20/oral%20expression/</url>
      
        <content type="html"><![CDATA[]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>Trigger</title>
      <link href="/2023/05/16/DB_Trigger/"/>
      <url>/2023/05/16/DB_Trigger/</url>
      
        <content type="html"><![CDATA[<h1 id="Event-Condition-Action"><a href="#Event-Condition-Action" class="headerlink" title="Event-Condition-Action"></a>Event-Condition-Action</h1><p>Execution mode: before or after</p><h1 id="Granularity-of-events"><a href="#Granularity-of-events" class="headerlink" title="Granularity of events:"></a>Granularity of events:</h1><p>Row-level granularity(for each row)—once for each tuple(less efficient)<br>Statement-level granularity(for each statement)—only once for each activating statement</p><h1 id="transition-variables"><a href="#transition-variables" class="headerlink" title="transition variables"></a>transition variables</h1><p>Row-level: tuple variables<br>Statement-level: table variables</p><blockquote><p>在数据库中，过渡变量（transition variable）是在触发器中使用的一种特殊变量类型。它们用于引用与触发器相关的行或数据。</p></blockquote><p>当触发器在数据库操作（如插入、更新、删除）发生时被触发时，过渡变量提供了对相关数据的访问。这些变量的值可以在触发器的动作部分使用，以执行特定的操作或进行其他处理。</p><p>过渡变量的名称和用法可能会根据具体的数据库系统和触发器定义而有所不同。在一些常见的数据库系统中，以下是几个常用的过渡变量：</p><p style="color: #33CC00;">OLD：表示在更新或删除触发器中引用被修改或删除的旧数据。它可以用于访问操作之前存在的值。</p><p style="color: #33CC00;">NEW：表示在插入或更新触发器中引用新插入或修改的数据。它可以用于访问操作之后的值。</p><h1 id="Triggers-in-SQL-1999-Syntax"><a href="#Triggers-in-SQL-1999-Syntax" class="headerlink" title="Triggers in SQL:1999, Syntax"></a>Triggers in SQL:1999, Syntax</h1><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">create trigger &lt;TriggerName&gt;</span><br><span class="line">&#123; before | after &#125;</span><br><span class="line">&#123; insert | delete | update [of &lt;Column&gt;] &#125; on &lt;Table&gt;</span><br><span class="line">referencing &#123; [ old table [as] &lt;OldTableAlias&gt; ]</span><br><span class="line">[ new table [as] &lt;NewTableAlias&gt; ] |</span><br><span class="line">[ old [row] [as] &lt;OldTupleName&gt; ]</span><br><span class="line">[ new [row] [as] &lt;NewTupleName&gt; ] &#125;</span><br><span class="line">[ for each &#123; row | statement &#125; ]</span><br><span class="line">[ when &lt;Condition&gt; ]</span><br><span class="line">&lt;SQLProceduralStatement&gt;</span><br></pre></td></tr></table></figure><h1 id="AFTER-trigger"><a href="#AFTER-trigger" class="headerlink" title="AFTER trigger"></a>AFTER trigger</h1><h2 id="Insertion-of-a-new-tuple-into-T1"><a href="#Insertion-of-a-new-tuple-into-T1" class="headerlink" title="Insertion of a new tuple into T1"></a>Insertion of a new tuple into T1</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">-- 创建T1表</span><br><span class="line">CREATE TABLE T1 (</span><br><span class="line">  ID INT PRIMARY KEY,</span><br><span class="line">  VALUE VARCHAR(50)</span><br><span class="line">);</span><br><span class="line"></span><br><span class="line">-- 创建T2表</span><br><span class="line">CREATE TABLE T2 (</span><br><span class="line">  ID INT PRIMARY KEY,</span><br><span class="line">  VALUE VARCHAR(50)</span><br><span class="line">);</span><br><span class="line"></span><br><span class="line">-- 创建触发器</span><br><span class="line">CREATE TRIGGER insert_into_T2</span><br><span class="line">AFTER INSERT ON T1</span><br><span class="line">FOR EACH ROW</span><br><span class="line">BEGIN</span><br><span class="line"> ** INSERT INTO **T2 (ID, VALUE) VALUES (NEW.ID, NEW.VALUE);</span><br><span class="line">END;</span><br></pre></td></tr></table></figure><p>NEW就是transition variable</p><h2 id="Deletion-of-a-tuple-from-T1"><a href="#Deletion-of-a-tuple-from-T1" class="headerlink" title="Deletion of a tuple from T1"></a>Deletion of a tuple from T1</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">CREATE TRIGGER delete_from_T2</span><br><span class="line">AFTER DELETE ON T1</span><br><span class="line">FOR EACH ROW</span><br><span class="line">BEGIN</span><br><span class="line">  DELETE FROM T2 WHERE ID = OLD.ID;</span><br><span class="line">END;</span><br></pre></td></tr></table></figure><h2 id="Update"><a href="#Update" class="headerlink" title="Update"></a>Update</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">-- 创建触发器</span><br><span class="line">CREATE TRIGGER update_T2</span><br><span class="line">**AFTER UPDATE OF VALUE ON** T1</span><br><span class="line">WHEN NEW.ID=OLD.ID</span><br><span class="line">FOR EACH ROW</span><br><span class="line">  UPDATE T2 SET T2.VALUE = NEW.VALUE </span><br><span class="line">  WHERE ID = NEW.ID;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="Conditional-replication"><a href="#Conditional-replication" class="headerlink" title="Conditional replication"></a>Conditional replication</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">CREATE TRIGGER COND_REPL_INS</span><br><span class="line">AFTER INSERT ON T1</span><br><span class="line">FOR EACH ROW</span><br><span class="line">WHEN (old.VALUE&gt;=10)</span><br><span class="line">**INSERT INTO T2 VALUES**(new.ID,new.VALUE)</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">CREATE TRIGGER COND_REPL_DEL</span><br><span class="line">AFTER DELETE ON T1</span><br><span class="line">FOR EACH ROW</span><br><span class="line">WHEN(old.VALUE&gt;=10)</span><br><span class="line">**DELETE FROM T2 WHERE** T2.ID=old.ID</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">CREATE TRIGGER Cond_REPL_UPD_1 –- new relevant tuple, replicate</span><br><span class="line">**AFTER UPDATE OF VALUE ON T1 WHEN new.ID = old.ID**</span><br><span class="line">FOR EACH ROW</span><br><span class="line">WHEN (old.VALUE &lt; 10 AND new.VALUE &gt;= 10)</span><br><span class="line">**INSERT INTO T2 VALUES** (new.ID, new.VALUE);</span><br><span class="line">CREATE TRIGGER Cond_REPL_UPD_2 –- already replicated tuple changed, propagate</span><br><span class="line">AFTER UPDATE OF VALUE ON T1 WHEN new.ID = old.ID</span><br><span class="line">FOR EACH ROW</span><br><span class="line">WHEN (old.VALUE &gt;= 10 AND new.VALUE &gt;= 10 AND old.VALUE != new.VALUE)</span><br><span class="line">**UPDATE T2 SET **T2.VALUE = new.VALUE WHERE T2.ID = new.ID</span><br><span class="line">CREATE TRIGGER Cond_REPL_UPD_3 –- replicated tuple no longer relevant: delete</span><br><span class="line">AFTER UPDATE OF VALUE ON T1 WHEN new.ID = old.ID</span><br><span class="line">FOR EACH ROW</span><br><span class="line">WHEN (old.VALUE &gt;= 10 AND new.VALUE &lt; 10)</span><br><span class="line">**DELETE FROM T2 WHERE** T2.ID = new.ID; </span><br></pre></td></tr></table></figure><h1 id="BEFORE-x2F-AFTER-trigger"><a href="#BEFORE-x2F-AFTER-trigger" class="headerlink" title="BEFORE&#x2F;AFTER trigger"></a>BEFORE&#x2F;AFTER trigger</h1><p>具体来说，”before” 触发器通常与数据库中的表相关联。当特定的操作（如插入、更新或删除数据）被执行之前，触发器会自动触发。触发器可以在数据<strong>被提交到数据库之前</strong>进行额外的验证、转换或处理。</p><p>以下是一些常见的使用情况：</p><ol><li><p>数据验证：通过 “before” 触发器，可以在执行插入或更新操作之前对数据进行验证。例如，你可以检查某些字段是否满足特定的条件或约束，如果不满足，则阻止操作执行，并返回错误消息。</p></li><li><p>数据转换：触发器还可以用于在数据被插入或更新之前对其进行转换。例如，你可以在插入数据之前将其格式化为特定的方式，或者在更新数据之前对其进行计算或清理。</p></li><li><p>数据补全：有时，在插入或更新数据时，可能需要根据其他表中的值自动填充某些字段。通过使用 “before” 触发器，你可以查询其他表并根据需要补全数据。</p></li><li><p>审计跟踪：触发器还可以用于在执行数据库操作之前记录审计日志。你可以捕获正在进行的操作以及相关的元数据，例如时间戳、执行用户等。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">CREATE TRIGGER NO_NEGATIVE_VALUES</span><br><span class="line">BEFORE UPDATE of VALUE ON T1</span><br><span class="line">FOR EACH ROW</span><br><span class="line">WHEN (new.VALUE &lt; 0)</span><br><span class="line">SET new.VALUE=0; -- this &quot;modifies the modification&quot;</span><br></pre></td></tr></table></figure></li></ol><h1 id="row-vs-statement"><a href="#row-vs-statement" class="headerlink" title="row vs. statement"></a>row vs. statement</h1><h2 id="DELETE"><a href="#DELETE" class="headerlink" title="DELETE"></a>DELETE</h2><p>• Statement:<br>DELETE FROM T1 WHERE VALUE &gt;&#x3D; 5;<br>• Trigger:</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">CREATE TRIGGER ST_REPL_DEL</span><br><span class="line">AFTER DELETE ON T1</span><br><span class="line">REFERENCING OLD TABLE AS OLD_T</span><br><span class="line">FOR EACH STATEMENT --all tuples considered at once</span><br><span class="line">DELETE FROM T2 WHERE T2.ID IN</span><br><span class="line">(SELECT ID FROM OLD_T); -- no need to add where OLD_T.value &gt;=10</span><br></pre></td></tr></table></figure><h2 id="INSERT"><a href="#INSERT" class="headerlink" title="INSERT"></a>INSERT</h2><p>• Statement:<br>INSERT INTO T1 (Id, Value) VALUES (4, 5), (5, 10), (6, 20);<br>Trigger:</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">CREATE TRIGGER ST_REPL_INS</span><br><span class="line">AFTER INSERT ON T1</span><br><span class="line">REFERENCING NEW TABLE AS NEW_T</span><br><span class="line">**FOR EACH STATEMENT** --all tuples considered at once</span><br><span class="line">INSERT INTO T2</span><br><span class="line">(SELECT ID, VALUE</span><br><span class="line">FROM NEW_T WHERE NEW_T.VALUE &gt;= 10);</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">CREATE TRIGGER REPLIC_INS</span><br><span class="line">AFTER UPDATE ON T1</span><br><span class="line">REFERENCING OLD TABLE AS OLD_T NEW TABLE AS NEW_T</span><br><span class="line">FOR EACH STATEMENT</span><br><span class="line">DELETE FROM T2 --delete all updated rows</span><br><span class="line">WHERE T2.ID IN (SELECT ID FROM OLD_T);--删除所有更新过的行</span><br><span class="line">INSERT INTO T2 --reinsert only relevant rows</span><br><span class="line">(SELECT ID, VALUE FROM NEW_T</span><br><span class="line">WHERE NEW_T.VALUE &gt;= 10);</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> STUDY </category>
          
          <category> POLIMI </category>
          
          <category> DB2 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> POLIMI </tag>
            
            <tag> DB </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Concurrency Control</title>
      <link href="/2023/05/16/DB_Concurrency%20Control/"/>
      <url>/2023/05/16/DB_Concurrency%20Control/</url>
      
        <content type="html"><![CDATA[<h1 id="Anomalies"><a href="#Anomalies" class="headerlink" title="Anomalies"></a>Anomalies</h1><ol><li>Lost update</li><li>Dirty read</li><li>Nonrepeatable read</li><li>Phantom update</li><li>Phantom insert</li></ol><h1 id="Serializable"><a href="#Serializable" class="headerlink" title="Serializable"></a>Serializable</h1><ul><li>Serial-Serializable-ALL</li><li><strong>View-serializability</strong>(the same reads-from relationship and final writes)——判断起来时空复杂度太高</li><li><strong>Conflict-serializability</strong>(更高的要求，更简单的判断方法)——conflict graph</li></ul><h1 id="approaches"><a href="#approaches" class="headerlink" title="approaches"></a>approaches</h1><p>##1. Lock<br><strong># pessimistic concurrency control</strong></p><ul><li><p><strong>r_lock(shared lock), w_lock(exclusive lock)</strong></p></li><li><p><strong>Two-Phase Locking (<em>short duration locks</em>)</strong><br>  解决non-repeatable read<br>  释放锁后不能申请任何别的锁 (growing phase-&gt;plateau-&gt;shrinking phase)<br>  VSR&lt;CSR&lt;2PL</p></li><li><p><strong>Strict 2PL (<em>long duration locks</em>)</strong><br>  解决dirty read<br>  commit&#x2F;rollback 后才能释放锁</p></li><li><p><strong>Predicate locks</strong><br>  the lock on all tuples satisfying the predicate</p></li><li><p><strong>Update lock</strong><br>  解决丢失更新的问题，事务T1在请求升级SL为UL时，必须保证没有别的事务的SL</p></li><li><p><strong>Hierarchical locking</strong><br>  自上而下请求资源<br>  自下而上释放锁<br>  schema, table, fragment, page, tuple, field</p></li><li><p><strong>Intention Locking Scheme</strong><br>  5 lock modes: SL, XL, ISL, IXL, SIXL<br>  Protocol:<br>  request: top-down<br>  release: bottom-up<br>  request <strong>SL or ISL</strong>——equally or more restrictive lock**(ISL or IXL)** on its “parent”<br>  request <strong>IXL,XL,SIXL</strong>——-equally or more restrictive lock(<strong>SIXL or IXL</strong>) on its “parent”</p></li></ul><p>##2. Timestamps<br><strong># optimistic concurrency control</strong></p><h1 id="Deadlock"><a href="#Deadlock" class="headerlink" title="Deadlock"></a>Deadlock</h1><ul><li>Lock graph</li><li>Wait-for graph(循环有死锁)</li></ul><h2 id="Deadlock-Resolution-Techniques"><a href="#Deadlock-Resolution-Techniques" class="headerlink" title="Deadlock Resolution Techniques"></a>Deadlock Resolution Techniques</h2><h3 id="1-Timeout"><a href="#1-Timeout" class="headerlink" title="1. Timeout"></a>1. Timeout</h3><h3 id="2-Deadlock-prevention"><a href="#2-Deadlock-prevention" class="headerlink" title="2. Deadlock prevention"></a>2. Deadlock prevention</h3><ul><li>resourse-based prevention<br>  事务必须一次请求所有资源<br>  但事务很难一下子明确所有需求</li><li>transaction-based prevention<br>  不要让老的等待年轻的<ul><li>Preemptive (杀掉占有资源的事务——wound-wait)<br>  老的抢（杀掉年轻的），年轻的等</li><li>Non-preemptive (杀掉请求资源的事务——wait-die)<br>  老年人申请年轻人的资源——wait<br>  年轻人申请老年人的资源——die(abort+restart)</li></ul></li></ul><h3 id="3-Deadlock-detection"><a href="#3-Deadlock-detection" class="headerlink" title="3. Deadlock detection"></a>3. Deadlock detection</h3><ul><li>Distributed Deadlock Detection<br><strong>Obermarck’s algorithm</strong></li></ul>]]></content>
      
      
      <categories>
          
          <category> STUDY </category>
          
          <category> POLIMI </category>
          
          <category> DB2 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> POLIMI </tag>
            
            <tag> DB </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>生词本</title>
      <link href="/2023/05/15/words(week21)/"/>
      <url>/2023/05/15/words(week21)/</url>
      
        <content type="html"><![CDATA[<p>#1.  predicate<br>[英] · &#x2F;ˈprɛdɪkət&#x2F;<br>[n.] 谓语；断言<br>[v.] 断言；预示</p><p>例句：</p><ol><li>The predicate of this sentence is “is a teacher”. (这个句子的谓语是“是一名老师”。)</li><li>She predicates her success on hard work and determination. (她认为自己的成功取决于努力和决心。)</li><li>In logic, the predicate refers to the part of a proposition that expresses what is said about the subject. (在逻辑学中，谓词指表达主语所说内容的命题部分。)</li></ol><p>#2. sparingly<br>[英] · &#x2F;ˈspeərɪŋli&#x2F;<br>[副词] 节约地，保守地</p><p>例句：</p><ol><li>She uses water sparingly when she washes dishes. (她洗碗时很节水。)</li><li>He doles out praise sparingly, so when he compliments you, it really means something. (他不轻易夸赞别人，所以当他表扬你时，真的有意义。)</li><li>The company has been spending money more sparingly since the economic downturn began. (自从经济衰退开始以来，公司一直在更加节省开支。)</li></ol><p>#3. anticipate<br>[英] · &#x2F;ænˈtɪs.ɪ.peɪt&#x2F;  美 · &#x2F;ænˈtɪs.ə.peɪt&#x2F;<br>[v] 预期；预料；期望<br>例句：</p><ol><li>I anticipate a difficult exam tomorrow. (我预计明天会有一场难考试。)</li><li>The company is anticipating an increase in profits this year. (公司预计今年利润将增加。)</li><li>She anticipated his every move and was always one step ahead of him. (她能够预见他的每一个动作，总是比他先一步。)</li></ol><p>#4. mitigate<br>[英] · &#x2F;ˈmɪtɪɡeɪt&#x2F;  [美] · &#x2F;ˈmɪtəˌgeɪt&#x2F;<br>[v] 缓和，减轻；使缓和，使减轻<br>例句：</p><ol><li>The doctor prescribed some medicine to mitigate the pain. (医生开了一些药来缓解疼痛。)</li><li>We need to take measures to mitigate the impact of climate change. (我们需要采取措施来减轻气候变化的影响。)</li><li>The company implemented policies to mitigate risks in their investments. (公司实施了政策以降低其投资风险。)</li></ol><p>#5. replication<br>[英] · &#x2F;ˌrɛplɪˈkeɪʃən&#x2F;<br>[n.] 复制；复刻；重复<br>例句：</p><ol><li>DNA replication is a fundamental process in cell division. (DNA的复制是细胞分裂中的基本过程。)</li><li>The artist made a perfect replication of the famous painting. (艺术家完美地复制了那幅著名画作。)</li><li>The study aimed to investigate the replication of previous research findings. (这项研究旨在调查之前研究结果的重现性。)</li></ol><p>#6. magnitude<br>[英] · &#x2F;ˈmæɡnɪtjuːd&#x2F;  美 · &#x2F;ˈmæɡnətuːd&#x2F;<br>[n.] 大小；量级；重要性<br>[adj.] 巨大的，重要的<br>例句：</p><ol><li>The magnitude of the earthquake was measured at 7.0 on the Richter scale. (这次地震的大小被测定为里氏7.0级。)</li><li>We cannot underestimate the magnitude of this problem. (我们不能低估这个问题的重要性。)</li><li>The company has achieved a magnitude of success that no one could have predicted. (该公司已经取得了一个无人能够预料到的巨大成功。)</li></ol><p>#7. vice-versa<br>反之亦然</p>]]></content>
      
      
      <categories>
          
          <category> English </category>
          
          <category> New word </category>
          
          <category> 2023.5.15 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> STUDY </tag>
            
            <tag> English </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>周报</title>
      <link href="/2023/05/15/weekly1/"/>
      <url>/2023/05/15/weekly1/</url>
      
        <content type="html"><![CDATA[<h1 id="Plan"><a href="#Plan" class="headerlink" title="Plan"></a>Plan</h1><ol><li>复习完MIDA1，看至少一半的exe课</li><li>复习完ACA</li><li>看FOR(2)和DB(3)的PPT，并做题</li><li>写周报，分享感受，The long season</li></ol><h1 id="发现的一些有趣的频道"><a href="#发现的一些有趣的频道" class="headerlink" title="发现的一些有趣的频道"></a>发现的一些有趣的频道</h1><p><a href="https://www.xiaoyuzhoufm.com/podcast/640ee2438be5d40013fe4a87">硬地骇客</a></p><p><a href="https://www.xiaoyuzhoufm.com/podcast/640ee2438be5d40013fe4a87">豌豆花下猫（关于Python）</a></p><p><a href="https://brr.fyi/">被派到南极洲工作的程序员</a><br>作者作为 IT 工程师被派到南极洲工作，博客是记录他在南极生活的点点滴滴</p><h1 id="看到的一些推特好帖"><a href="#看到的一些推特好帖" class="headerlink" title="看到的一些推特好帖"></a>看到的一些推特好帖</h1><h2 id="1-如何提高专注度"><a href="#1-如何提高专注度" class="headerlink" title="1. 如何提高专注度"></a>1. 如何提高专注度</h2><p>**转自博主Dexter Yang(@dexteryy)**，<br><a href="https://twitter.com/dexteryy/status/1629491278886076416">方法</a><br>想要通过正念（mindfulness&#x2F;meditation）来恢复对当下的感知、减慢时间流逝、用内啡肽替代多巴胺、提升专注能力、降低压力的消极影响，我觉得骑车是最有效果的（图2），比那些冥想app里的付费课程（图1）强多了。<br>方法总结：</p><ol><li>不要听播客不要听播客不要听播客（凡是抢占注意力的都不要碰）。<br>(1&#x2F;4)</li><li>开降噪，听音乐。最好是 citypop、blues  那样积极向上的音乐（这两种本来就源自上班族和黑人奴工振奋情绪排解压力的需求）。</li><li>公路车和共享单车都可以。</li><li>把注意力放在自身感受和眼前情景上，只接受下意识的瞬间的发散和思考。</li><li>天气要好，一定要有阳光，推荐下午出发，去程有落日返程有夜景。</li><li>路线选择类似 city walk，尽量途径那些有河、有沿街生态、城市机理细密有机多样的地方。</li></ol>]]></content>
      
      
      <categories>
          
          <category> weekly </category>
          
      </categories>
      
      
        <tags>
            
            <tag> weekly </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Lec3</title>
      <link href="/2023/05/07/Lec3/"/>
      <url>/2023/05/07/Lec3/</url>
      
        <content type="html"><![CDATA[<h1 id="Branch-Hazards-and-Static-Branch-Prediction-Techniques"><a href="#Branch-Hazards-and-Static-Branch-Prediction-Techniques" class="headerlink" title="Branch Hazards and Static Branch Prediction Techniques"></a>Branch Hazards and Static Branch Prediction Techniques</h1><h2 id="Three-classes-of-hazards"><a href="#Three-classes-of-hazards" class="headerlink" title="Three classes of hazards"></a>Three classes of hazards</h2><ol><li>beq和bne指令具体的结构是什么样的</li></ol><p>beq和bne指令的具体结构如下：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">beq $rs, $rt, offset</span><br><span class="line">bne $rs, $rt, offset</span><br></pre></td></tr></table></figure><p>其中，$rs和$rt是两个要比较的寄存器，offset是要跳转的相对地址。</p><p>这两个指令的作用分别是比较$rs和$rt的值是否相等或不相等，如果相等或不相等则跳转到当前PC值加上offset后的地址。</p><p>例如，如果要比较寄存器$4和$5的值是否相等，如果相等则跳转到当前PC加上8个字节（即2条指令）后的地址，可以使用以下beq指令：</p><p>beq $4, $5, 8</p><p>如果要比较寄存器$6和$7的值是否不相等，如果不相等则跳转到当前PC加上16个字节（即4条指令）后的地址，可以使用以下bne指令：</p><p>bne $6, $7, 16</p><p>这两个指令在程序控制流程中应用广泛，可以用于实现if-else语句、while循环等程序控制结构。</p>]]></content>
      
      
      <categories>
          
          <category> STUDY </category>
          
          <category> POLIMI </category>
          
          <category> ACA </category>
          
      </categories>
      
      
        <tags>
            
            <tag> POLIMI </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Exe1</title>
      <link href="/2023/05/07/Exe1/"/>
      <url>/2023/05/07/Exe1/</url>
      
        <content type="html"><![CDATA[<h1 id="Performance-Amdhal’s-Law-Pipeline"><a href="#Performance-Amdhal’s-Law-Pipeline" class="headerlink" title="Performance, Amdhal’s Law, Pipeline"></a>Performance, Amdhal’s Law, Pipeline</h1><ol><li>为什么MIPS架构五级流水线的指令译码阶段和写回阶段可以被分成两部分？</li></ol><p>在MIPS架构中，指令译码阶段的指令解码和操作数寻址可以在同一个阶段中实现。这是因为在MIPS架构中，指令的格式是固定的，指令中的寄存器编号和偏移量等操作数地址相关信息都在指令的特定位置上。</p><p>在指令译码阶段，指令解码和操作数寻址这两个小部分的执行顺序是有先后关系的。</p><p>具体来说，指令解码必须在操作数寻址之前执行，因为指令解码需要识别指令的类型和需要访问的寄存器和存储器，这些信息是操作数寻址所必需的。如果操作数寻址在指令解码之前执行，那么CPU就无法确定需要访问的寄存器和存储器，无法进行有效的操作数寻址。</p><p>因此，在指令译码阶段，指令解码和操作数寻址必须按照指定的顺序依次执行。通常情况下，指令解码和操作数寻址可以在同一个时钟周期内完成，因此它们被视为一个阶段，但是在实际的设计中，也可以将它们分别实现为两个子阶段，以便更好地控制CPU的时序和性能。</p><ol start="2"><li>MIPS有哪些指令</li></ol><p>MIPS架构定义了多种指令，包括算术指令、逻辑指令、移位指令、条件分支指令、跳转指令、访存指令等等。以下是MIPS指令的一些常见分类：</p><p>算术指令：包括加、减、乘、除等指令。例如：add、addi、addu、addiu、sub、mult、div等。</p><p>逻辑指令：包括与、或、异或、非等指令。例如：and、or、xor、nor等。</p><p>移位指令：包括左移、右移等指令。例如：sll、srl、sra等。</p><p>条件分支指令：包括条件分支和条件跳转等指令。例如：beq、bne、blez、bgtz等。</p><p>跳转指令：包括无条件跳转指令和子程序调用指令等。例如：j、jal、jr等。</p><p>访存指令：包括从内存中读取数据和将数据写入内存等指令。例如：lw、lb、sw、sb等。</p><p>此外，MIPS还支持一些特殊的指令，如异常处理指令、协处理器指令等，这些指令可以用于特殊的计算需求，例如浮点运算等。</p><ol start="3"><li>lw和sw指令</li></ol><p>lw和sw指令是MIPS架构中的访存指令，用于从内存中读取数据和将数据写入内存。它们的具体功能和用法如下：</p><ul><li><p>lw指令：从内存中读取一个字（32位数据），并将其存储到指定的寄存器中。lw指令的语法如下：</p> <figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">lw $rt, offset($rs)</span><br></pre></td></tr></table></figure><p> 其中，$rt是目标寄存器，offset是偏移量，$rs是基地址寄存器。偏移量表示目标地址相对于基地址的偏移量，可以是一个立即数或者另一个寄存器的值。</p><p> 执行过程如下：首先，CPU将基地址寄存器的值加上偏移量，计算出目标地址；然后，CPU从目标地址中读取一个字（32位数据），并将其存储到目标寄存器中。如果读取过程中发生异常，如地址错误或者访问权限错误等，CPU将产生一个异常，需要进行异常处理。</p></li><li><p>sw指令：将一个字（32位数据）存储到指定的内存地址中。sw指令的语法如下：</p> <figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sw $rt, offset($rs)</span><br></pre></td></tr></table></figure><p> 其中，$rt是源寄存器，offset是偏移量，$rs是基地址寄存器。偏移量表示目标地址相对于基地址的偏移量，可以是一个立即数或者另一个寄存器的值。</p><p> 执行过程如下：首先，CPU将基地址寄存器的值加上偏移量，计算出目标地址；然后，CPU将源寄存器中的值存储到目标地址中。如果存储过程中发生异常，如地址错误或者访问权限错误等，CPU将产生一个异常，需要进行异常处理。</p></li></ul><p>需要注意的是，偏移量可以是一个有符号的16位整数，因此，lw和sw指令最大可以访问的内存范围是从基地址加上-32768到基地址加上32767的区间。此外，MIPS是一个大端字节序的架构，因此，读取和存储的字节顺序是从高位到低位的。</p><ol start="4"><li>在MIPS处理器中，Forwarding path怎么工作？</li></ol><p>在MIPS处理器中，Forwarding path被广泛用于解决数据冒险（Data Hazard）的问题，提高指令的执行效率。具体地，Forwarding path通常在以下两个阶段被使用：</p><ul><li>执行阶段</li></ul><p>在执行阶段，Forwarding path被用于解决数据冒险。当一个指令需要使用另一个指令的执行结果时，通常会等待前一条指令的结果被写入寄存器后才能继续执行后续指令。但是，如果前一条指令的结果可以直接传递给后续指令，就可以通过Forwarding path来避免等待寄存器的写入。</p><p>在MIPS处理器中，执行阶段的指令通常会产生数据结果，并<strong>将其存储在执行阶段的寄存器中</strong>。如果后续指令需要使用这些结果，则需要在<strong>执行阶段的输出阶段中使用Forwarding path</strong>将数据结果传递给后续指令。</p><ul><li>访存阶段</li></ul><p>在MIPS处理器中，数据访问指令，如lw和sw指令，通常需要在访存阶段中执行。这些指令涉及访问内存或外部设备，因此需要在内存或外部设备中读取或写入数据。</p><p>在访存阶段，如果后续指令需要使用lw指令加载的数据，则需要使用Forwarding path将数据传递给后续指令。类似地，如果后续指令需要将数据存储到内存中，则需要在执行sw指令时使用Forwarding path，以便将数据直接传递给存储器，<strong>而不是等待其被写入寄存器。</strong></p><p>总之，Forwarding path是MIPS处理器中解决数据冒险的重要技术，可以在不需要等待寄存器写入的情况下加速指令的执行，并提高CPU的效率。</p><ol start="5"><li>具体讲一下指令译码阶段要完成哪些工作</li></ol><p>在MIPS五级流水线中，指令译码阶段是第二个阶段，也被称为ID（Instruction Decode）阶段。在这个阶段，处理器会执行以下操作：</p><p>从指令寄存器中取出当前指令，然后将其解码，确定指令类型和操作数。<br>读取寄存器文件中的操作数寄存器的值，并将其存储在指令中的寄存器操作数字段中。<br><em>执行分支和跳转指令的目标地址计算</em>。对于分支指令，需要判断分支是否应该被执行，即判断条件码寄存器中的标志位是否符合指令中的条件码要求；对于跳转指令，需要计算跳转目标地址，并将其存储在指令中的目标地址字段中。<br>为执行阶段准备数据，将指令中的操作数传递给执行阶段，以便执行阶段可以进行操作。<br>总之，<strong>指令译码阶段是将指令翻译成处理器可以理解的指令格式，并将操作数准备好</strong>，以便执行阶段能够使用它们。在这个阶段，处理器还会进行分支和跳转指令的处理，以便指令流能够正确地执行。</p><ol start="6"><li>sw的指令译码阶段要做什么</li></ol><p>在MIPS五级流水线中，sw指令是一种存储数据的指令，它将一个寄存器的值存储到内存中。在指令译码阶段，sw指令需要完成以下工作：</p><ul><li>解码指令，确定指令类型和操作数。对于sw指令，指令类型为存储型指令，其中操作数包括要存储的数据和内存地址。</li><li>读取源寄存器中的数据，即要存储的数据。这需要访问寄存器文件，并从指定的寄存器中读取数据。</li><li>计算内存地址，这需要访问寄存器文件，并从指定的寄存器中读取基地址，然后将偏移量添加到基地址上得到内存地址。偏移量存储在指令的立即数字段中。</li><li>将存储数据和内存地址传递给执行阶段，以便执行阶段能够将数据存储到内存中。<br>需要注意的是，由于存储操作需要访问内存，因此存储操作可能会发生数据冒险问题。如果前面的指令已经修改了要存储的数据，那么该值将不会正确地存储到内存中。为了解决这个问题，MIPS处理器使用了一些技术，如前向传递和暂停插入，以确保数据在正确的时间传递到存储阶段。</li></ul><ol start="7"><li>MIPS写回阶段要完成哪些工作</li></ol><p>在MIPS五级流水线中，写回阶段是最后一个阶段，也是整个指令执行过程的最后一步。在写回阶段，需要完成以下工作：</p><ul><li>读取执行阶段中计算得出的结果，即要写回的数据。这些数据可能来自寄存器或内存，具体取决于执行的指令类型。</li><li>将数据写回到寄存器文件中。要写回的寄存器编号和数据都来自执行阶段。写回操作通常是一个简单的操作，它只需要将数据写入寄存器文件中的指定位置即可。</li><li>如果存在异常，将异常信号传递到控制器中，以便控制器可以采取适当的措施，如中断执行流程或跳转到异常处理程序。</li></ul><ol start="8"><li>写回阶段不是要把数据写回内存吗</li></ol><p>在MIPS架构中，数据存储在寄存器文件或内存中。写回阶段主要是将计算得出的结果写回到<strong>寄存器文件</strong>中，而不是写回到内存中。写回到内存的指令是存储器访问指令，例如sw指令，它们的写回操作在执行阶段中完成。在执行阶段中，存储器访问指令需要计算内存地址、读取要存储的数据，并将它们写回到内存中。当这些操作完成后，执行阶段就结束了，接下来就是写回阶段。在写回阶段，执行阶段计算得出的结果会被写回到寄存器文件中，以便后续的指令可以使用这些结果。所以，写回阶段主要是负责将数据写回到寄存器文件中，而不是写回到内存中。</p>]]></content>
      
      
      <categories>
          
          <category> STUDY </category>
          
          <category> POLIMI </category>
          
          <category> ACA </category>
          
      </categories>
      
      
        <tags>
            
            <tag> POLIMI </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>链表</title>
      <link href="/2023/04/23/leetcode(%E9%93%BE%E8%A1%A8)/"/>
      <url>/2023/04/23/leetcode(%E9%93%BE%E8%A1%A8)/</url>
      
        <content type="html"><![CDATA[<h1 id="2-Add-Two-Numbers"><a href="#2-Add-Two-Numbers" class="headerlink" title="2. Add Two Numbers"></a>2. Add Two Numbers</h1><p>You are given two non-empty linked lists representing two non-negative integers. The digits are stored in reverse order, and each of their nodes contains a single digit. Add the two numbers and return the sum as a linked list.</p><p>You may assume the two numbers do not contain any leading zero, except the number 0 itself.</p><p>&#x2F;**</p><ul><li>Definition for singly-linked list.</li><li>public class ListNode {</li><li><pre><code>int val;</code></pre></li><li><pre><code>ListNode next;</code></pre></li><li><pre><code>ListNode() &#123;&#125;</code></pre></li><li><pre><code>ListNode(int val) &#123; this.val = val; &#125;</code></pre></li><li><pre><code>ListNode(int val, ListNode next) &#123; this.val = val; this.next = next; &#125;</code></pre></li><li>}<br> *&#x2F;</li></ul><ul><li>链表怎么遍历</li><li>怎么解决位数不同的问题。我好像知道了，从低位开始加。</li></ul><ol><li>链表要用 -&gt;</li><li>链表定义：ListNode *l3&#x3D;l1,*l4&#x3D;l2;</li><li>链表和数组不同，可以在函数体内定义新的指针并返回</li><li></li></ol>]]></content>
      
      
      <categories>
          
          <category> Leetcode </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Leetcode </tag>
            
            <tag> 链表(Linked list) </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>生词本</title>
      <link href="/2023/04/19/new%20words/"/>
      <url>/2023/04/19/new%20words/</url>
      
        <content type="html"><![CDATA[<p>[TOC]</p><p>[目录]</p><h1 id="agnostic"><a href="#agnostic" class="headerlink" title="agnostic"></a>agnostic</h1><p>[英] · &#x2F;æɡˈnɒstɪk&#x2F;</p><p>[n.] 不可知论者，不可知论的</p><p>例句：</p><ul><li><p>He was raised in a religious family, but now considers himself an agnostic. (他在一个宗教家庭中长大，但现在认为自己是个不可知论者。)</p></li><li><p>The debate between the atheist and the agnostic became quite heated. (无神论者和不可知论者之间的辩论变得非常激烈。)</p></li><li><p>She has always been curious about different religions, but remains agnostic herself. (她一直对不同的宗教很好奇，但自己仍然是个不可知论者。)</p></li></ul><h1 id="improve-and-squeeze-the-performance"><a href="#improve-and-squeeze-the-performance" class="headerlink" title="improve and squeeze the performance"></a>improve and squeeze the performance</h1><p>“squeeze” 在这个句子中的意思是“挤压”，指通过紧缩或压缩来提高表现。整个句子的意思是“改善并挤压表现”。</p><p>这里的 “squeeze” 可以理解为一种习语，表示尽可能地利用资源或时间来达到最佳效果。类似的英文例句有：</p><ol><li>We need to squeeze every last drop of performance out of our team.</li></ol><p>（我们需要从团队中挤出每一滴性能）</p><ol start="2"><li>The coach is trying to squeeze more speed out of the athlete’s running technique.</li></ol><p>（教练正在试图从运动员跑步技术中挤出更多速度）</p><ol start="3"><li>I’m going to have to squeeze in a workout before my meeting this afternoon.</li></ol><p>（我得在今天下午开会前抽空做一次锻炼）</p><h1 id="go-beyond"><a href="#go-beyond" class="headerlink" title="go beyond"></a>go beyond</h1><p>Go beyond” 在这个句子中是一个动词短语，意思是“超越、突破”。整个句子的意思是“我们如何能够超越现有的限制或者达到更高的目标”。</p><p>举几个相同意思的例句：</p><ol><li><p>We need to go beyond our comfort zone if we want to achieve success.（如果想要成功，我们需要突破自己舒适区）</p></li><li><p>The company is trying to go beyond its competitors by offering better services.（公司正在通过提供更好的服务来超越竞争对手）</p></li><li><p>To truly understand a culture, you must go beyond the surface level and delve deeper into its history and traditions.（要真正理解一种文化，你必须深入了解其历史和传统）</p></li></ol><h1 id="arguerarchy"><a href="#arguerarchy" class="headerlink" title="arguerarchy"></a>arguerarchy</h1><p>[英语] · &#x2F;ˌɑːɡjuˈærki&#x2F;</p><p>[n.] 争论统治，以争辩为基础的领导方式</p><p>例句：</p><ol><li><p>The company’s decision-making process is often slowed down by the arguerarchy among its top executives. (公司的决策过程常常被高管之间的争论所拖延。)</p></li><li><p>Some people believe that democracy is just another form of arguerarchy, where those who are loudest and most persuasive get their way. (有些人认为民主只是另一种形式的争论统治，在这里最响亮和最有说服力的人能够得到他们想要的。)</p></li><li><p>In an arguerarchy, it can be difficult for new ideas or perspectives to gain traction if they don’t fit with the prevailing opinions of those in power. (在一个以争辩为基础的领导方式中，如果新思想或观点与当权者普遍持有的意见不符，它们很难获得支持。)</p></li></ol><h1 id="coarse-grained-multithreading"><a href="#coarse-grained-multithreading" class="headerlink" title="coarse grained multithreading"></a>coarse grained multithreading</h1><p>“coarse”的意思是“粗糙的”或者“粗略的”。整个句子指的是一种多线程技术，其中任务被分成较大、较粗糙的块来执行。</p><p>类似含义的tl例句有：</p><ul><li><p>Fine-grained multithreading（细粒度多线程）</p></li><li><p>Coarse-grained parallelism（粗略并行）</p></li></ul><p>简单解释一下这些例句：Fine-grained multithreading 指将任务划分为更小、更细致的块以实现多线程；Coarse-grained parallelism 则指使用相对较大和不太详细地定义任务来实现并行处理。</p><h1 id="salvation"><a href="#salvation" class="headerlink" title="salvation"></a>salvation</h1><p>[英] &#x2F;sælˈveɪʃən&#x2F;<br>[n.] 拯救，救赎<br>例句：</p><ol><li>The church teaches that salvation comes through faith in Jesus Christ. (教会认为拯救来自于对耶稣基督的信仰。)</li><li>He felt a sense of salvation after confessing his sins to the priest. (向神父忏悔后，他感到一种解脱感。)</li><li>Many people seek salvation from their problems through meditation or prayer. (许多人通过冥想或祷告寻求摆脱问题的拯救。)</li></ol><h1 id="utilization"><a href="#utilization" class="headerlink" title="utilization"></a>utilization</h1><p>[英] · &#x2F;juːtɪlaɪ’zeɪʃ(ə)n&#x2F;</p><p>[n.] 利用，使用</p><p>例句：</p><ol><li><p>The company aims to increase the utilization of its resources. (公司旨在提高其资源的利用率。)</p></li><li><p>Proper utilization of time is essential for success. (合理利用时间对于成功至关重要。)</p></li><li><p>The government is promoting the utilization of renewable energy sources. (政府正在推广可再生能源的利用。)</p></li></ol><h1 id="furious"><a href="#furious" class="headerlink" title="furious"></a>furious</h1><p>[英语] · &#x2F; ˈfjʊəriəs &#x2F;</p><p>[形容词] 狂怒的；暴怒的；猛烈的</p><p>例句：</p><ol><li>She was absolutely furious when she found out.</li></ol><p>（她发现后非常愤怒。）</p><ol start="2"><li>The fans were furious at the team’s performance.</li></ol><p>（球迷对队伍表现感到非常愤怒。）</p><ol start="3"><li>He slammed the door in a furious rage.</li></ol><p>（他勃然大怒，砰地一声关上了门。）</p><h1 id="taxonomy"><a href="#taxonomy" class="headerlink" title="taxonomy"></a>taxonomy</h1><p>[英] &#x2F;tækˈsɒnəmi&#x2F;</p><p>[n.] 分类学</p><p>例句：</p><ol><li><p>The taxonomy of this species is still under debate. (这个物种的分类学仍在争议中。)</p></li><li><p>She specializes in the taxonomy of marine organisms. (她专攻海洋生物的分类学。)</p></li><li><p>Taxonomy is an important field in biology and ecology. (分类学是生物和生态学中重要的领域。)</p></li></ol><h1 id="decrement"><a href="#decrement" class="headerlink" title="decrement"></a>decrement</h1><p>[英] &#x2F;ˈdɛkrɪmənt&#x2F;<br>[n.] 递减，减少<br>[v.] 减少，逐渐变小</p><p>例句：</p><ol><li><p>The company’s profits have been in a state of decrement for the past year. (公司的利润在过去一年里一直处于下降状态。)</p></li><li><p>We need to decrement our expenses if we want to save money. (如果我们想要省钱，就需要减少开支。)</p></li><li><p>The population of this town has been decrementing steadily over the years. (这个城镇的人口数量多年来一直在稳步下降。</p></li></ol><h1 id="elaborate"><a href="#elaborate" class="headerlink" title="elaborate"></a>elaborate</h1><p>[英] &#x2F;ɪˈlæbərət&#x2F;<br>[动词] 详细阐述；精心制作；详尽阐明<br>[形容词] 精心制作的；复杂的<br>例句：</p><ol><li>She elaborated on her plans for the future. (她详细阐述了自己未来的计划。)</li><li>The cake was beautifully elaborate. (这个蛋糕做得非常精美。)</li><li>He gave an elaborate explanation of his theory. (他对自己的理论进行了详尽的解释。)</li></ol><h1 id="chronologically"><a href="#chronologically" class="headerlink" title="chronologically"></a>chronologically</h1><p>[英] · &#x2F;ˌkrɒnəˈlɒdʒɪkli&#x2F;<br>[副词] 按时间顺序地<br>例句：</p><ol><li>The events were presented chronologically in the history book. (这本历史书按照时间顺序呈现了事件。)</li><li>Please arrange the documents chronologically before submitting them. (请在提交前按时间顺序排列文件。)</li><li>The professor explained the development of the theory chronologically during his lecture. (教授在讲座中按照时间顺序解释了理论的发展。)</li></ol><h1 id="ancestor"><a href="#ancestor" class="headerlink" title="ancestor"></a>ancestor</h1><p>[英] &#x2F;ˈæn.ses.tər&#x2F;<br>[n] 祖先，祖宗<br>例句：</p><ol><li>My ancestors came from Ireland. (我的祖先来自爱尔兰。)</li><li>We should respect our ancestors and their traditions. (我们应该尊重我们的祖先和他们的传统。)</li><li>The study of genealogy helps people trace their ancestors and family history. (家谱研究帮助人们追溯他们的祖先和家族历史。)</li></ol><h1 id="ellipse"><a href="#ellipse" class="headerlink" title="ellipse"></a>ellipse</h1><p>[英语] · &#x2F; ɪˈlɪps &#x2F;<br>[n.] 椭圆形<br>例句：</p><ol><li>The planet’s orbit is an ellipse.<br>（这颗行星的轨道是一个椭圆。）</li><li>The shape of the pool was an elongated ellipse.<br>（游泳池的形状是一个细长的椭圆形。）</li><li>She drew an ellipse on the paper to demonstrate its shape.<br>（她在纸上画了一个椭圆来展示它的形状。）</li></ol><h1 id="concatenate"><a href="#concatenate" class="headerlink" title="concatenate"></a>concatenate</h1><p>[英] &#x2F;kən’kætɪneɪt&#x2F;<br>[v] 连接，串联<br>例句：</p><ol><li>You can concatenate two strings using the “+” operator. (你可以使用“+”运算符连接两个字符串。)</li><li>The program will concatenate all the files in the folder into one document. (该程序将把文件夹中的所有文件连接成一个文档。)</li><li>In Excel, you can use the CONCATENATE function to combine text from different cells into one cell. (在Excel中，您可以使用CONCATENATE函数将来自不同单元格的文本组合到一个单元格中。)</li></ol><h1 id="compatible"><a href="#compatible" class="headerlink" title="compatible"></a>compatible</h1><p>[英] &#x2F;kəmˈpætəbl&#x2F;<br>[形] 兼容的；能共存的；和谐相处的<br>例句：</p><ol><li>The software is compatible with both Windows and Mac operating systems. (这个软件可以在Windows和Mac操作系统上运行。)</li><li>Their personalities are very compatible, which makes them great friends. (他们性格非常合得来，所以成为了好朋友。)</li><li>This printer is not compatible with older versions of the software. (这台打印机不兼容旧版本的软件。)</li></ol><h1 id="recast"><a href="#recast" class="headerlink" title="recast"></a>recast</h1><p>[英语] · &#x2F;riːˈkæst&#x2F;<br>[v.] 重新铸造；重塑；改写<br>例句：</p><ol><li>The director recast the lead role with a more experienced actor. (导演用更有经验的演员重新选角了主角。)</li><li>She decided to recast her novel as a screenplay. (她决定将自己的小说改编成剧本。)</li><li>The company had to recast their budget after unexpected expenses arose. (公司不得不在出现意外开支后重新制定预算。)</li></ol><h1 id="motif"><a href="#motif" class="headerlink" title="motif"></a>motif</h1><p>[英] · &#x2F;məʊˈtiːf&#x2F;<br>[n.] 主题；图案；动机<br>例句：</p><ol><li>The motif of the painting is a beautiful sunset over the ocean. (这幅画的主题是海洋上美丽的日落。)</li><li>The fabric has a floral motif that adds a touch of elegance to the dress. (这种面料有花卉图案，为裙子增添了一份优雅。)</li><li>The writer often uses the same motif in his novels, exploring different aspects of it each time. (这位作家经常在他的小说中使用相同的主题，在每次探索不同方面。)</li></ol><h1 id="usualization"><a href="#usualization" class="headerlink" title="usualization"></a>usualization</h1><p>[英] · &#x2F;ˌjuːʒʊəlaɪ’zeɪʃ(ə)n&#x2F;<br>[n.] 通常化，标准化<br>例句：</p><ol><li>The usualization of this process will greatly improve efficiency. (这个过程的标准化将极大地提高效率。)</li><li>Usualization is an important step in quality control. (通常化是质量控制中的重要步骤。)</li><li>The company has implemented a policy of usualization across all departments. (公司已在所有部门实施了通常化政策。)</li></ol><h1 id="divergent"><a href="#divergent" class="headerlink" title="divergent"></a>divergent</h1><p>[英] · &#x2F;daɪˈvɜːdʒənt&#x2F;<br>[形容词] 1. 分歧的；不同的 2. 发散的；分叉的<br>例句：</p><ol><li>The opinions of the two experts are divergent on this issue.<br>（这个问题上，两位专家意见不一。）</li><li>The rays of light are divergent after passing through the lens.<br>（光线通过透镜后会发散。）</li><li>Their paths in life were becoming increasingly divergent.<br>（他们人生道路越来越分岔了。）</li></ol><h1 id="priest"><a href="#priest" class="headerlink" title="priest"></a>priest</h1><p>[英] &#x2F;priːst&#x2F;  美 &#x2F;prist&#x2F;<br>[n] &lt;宗&gt;神父；牧师<br>例句：</p><ol><li>The priest led the congregation in prayer. (神父带领教众祷告。)</li><li>He was ordained as a Catholic priest last year. (他去年被任命为天主教神父。)</li><li>The young couple asked the priest to marry them in the church. (这对年轻夫妇请求牧师在教堂里为他们举行婚礼。)</li></ol>]]></content>
      
      
      <categories>
          
          <category> English </category>
          
          <category> New word </category>
          
          <category> 2023.5.7 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> STUDY </tag>
            
            <tag> English </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>MIDA</title>
      <link href="/2023/04/18/MIDA/"/>
      <url>/2023/04/18/MIDA/</url>
      
        <content type="html"><![CDATA[<h2 id="Prediction"><a href="#Prediction" class="headerlink" title="Prediction"></a>Prediction</h2><ul><li>什么是steady_state output?</li><li>什么是POLES和ZEROS?</li><li>γ是什么?</li><li>什么是predictor?</li><li>y(t)&#x3D;w(z)e(t)是什么？</li><li>为什么过去的现在的sample相乘等于0</li><li>笔记第5页y(t+k|t,s)为什么是stochastic process？</li><li>为什么prediction error是stochastic process？</li><li>MA的Variance为什么是平方和？为什么会收敛？</li></ul>]]></content>
      
      
      <categories>
          
          <category> STUDY </category>
          
          <category> POLIMI </category>
          
          <category> MIDA </category>
          
      </categories>
      
      
        <tags>
            
            <tag> POLIMI </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>导入renren-fast包</title>
      <link href="/2023/04/17/2.%20%E8%BF%90%E8%A1%8C%E7%A8%8B%E5%BA%8F%E8%B7%91%E4%B8%8D%E9%80%9A/"/>
      <url>/2023/04/17/2.%20%E8%BF%90%E8%A1%8C%E7%A8%8B%E5%BA%8F%E8%B7%91%E4%B8%8D%E9%80%9A/</url>
      
        <content type="html"><![CDATA[<h1 id="第一个error"><a href="#第一个error" class="headerlink" title="第一个error"></a>第一个error</h1><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">D:\JDK\jdk-17\bin\java.exe -XX:TieredStopAtLevel=1 -noverify -Dspring.output.ansi.enabled=always &quot;-javaagent:D:\IntelliJ IDEA 2021.3.1\lib\idea_rt.jar=7270:D:\IntelliJ IDEA 2021.3.1\bin&quot; -Dfile.encoding=UTF-8 com.shinwhy.freemall.coupon.FreemallCouponApplication</span><br><span class="line"></span><br><span class="line">Java HotSpot(TM) 64-Bit Server VM warning: Options -Xverify:none and -noverify were deprecated in JDK 13 and will likely be removed in a future release.</span><br><span class="line">错误: 找不到或无法加载主类 com.shinwhy.freemall.coupon.FreemallCouponApplication</span><br><span class="line">原因: java.lang.ClassNotFoundException: com.shinwhy.freemall.coupon.FreemallCouponApplication</span><br><span class="line"></span><br><span class="line">Process finished with exit code 1</span><br></pre></td></tr></table></figure><p>##chatgpt回答</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">这个错误信息包含两个部分：</span><br><span class="line"></span><br><span class="line">Java HotSpot(TM) 64-Bit Server VM warning: Options -Xverify:none and -noverify were deprecated in JDK 13 and will likely be removed in a future release. 这个警告信息是在运行Java虚拟机时出现的，提示你使用的是已经被弃用的选项。这两个选项-Xverify:none和-noverify在JDK 13中已经被弃用，未来的版本可能会被移除。</span><br><span class="line"></span><br><span class="line">错误: 找不到或无法加载主类 com.shinwhy.freemall.coupon.FreemallCouponApplication 原因: java.lang.ClassNotFoundException: com.shinwhy.freemall.coupon.FreemallCouponApplication。 这个错误是在运行Java应用程序时出现的。它表示Java虚拟机无法找到或加载名为com.shinwhy.freemall.coupon.FreemallCouponApplication的主类。这可能是由于类路径问题或者缺少依赖库等原因导致的。</span><br><span class="line"></span><br><span class="line">针对这个错误，你可以考虑以下几个方面：</span><br><span class="line"></span><br><span class="line">检查类路径是否正确。在运行Java应用程序时，Java虚拟机会按照类路径查找类文件。如果类路径设置不正确，那么Java虚拟机就无法找到对应的类文件。你可以通过检查类路径是否包含了com.shinwhy.freemall.coupon.FreemallCouponApplication类文件的目录或jar包来确认类路径是否正确。</span><br><span class="line"></span><br><span class="line">检查是否缺少依赖库。如果程序依赖于其他的库文件，那么需要将这些库文件加入到类路径中，否则Java虚拟机也无法找到对应的类文件。你可以检查应用程序的依赖库，确保依赖库已经正确安装，并且类路径中包含了这些依赖库。</span><br><span class="line"></span><br><span class="line">如果问题仍然存在，你可以尝试使用其他版本的Java虚拟机来运行程序，或者更新程序的依赖库版本。同时，你可以考虑升级到最新版本的JDK，以避免使用已经被弃用的选项。</span><br></pre></td></tr></table></figure><p>第一个问题我尝试装JDK8试试看能不能解决<br>今天突然想到去查一下renren-fast对应的JDK版本，官网上说只支持JDK8，所以我安装JDK8，并修改所有pom.xml文件，好像解决了。<br>##一些小error:</p><blockquote><p><code>找不到符号：.allowedOriginPatterns(&quot;*&quot;)</code></p></blockquote><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">https://blog.csdn.net/little___ant/article/details/126885567</span><br></pre></td></tr></table></figure><hr><blockquote><p><code>找不到符号：&lt;fork&gt;true&lt;/fork&gt;</code></p></blockquote><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">我遇到了几乎同样的问题。</span><br><span class="line"></span><br><span class="line">我使用的是 jdk 16、maven 编译器 3.8.1 和 IntelliJ 版本 2021.1.3。</span><br><span class="line"></span><br><span class="line">对 pom.xml 进行任何更改后，右侧会显示一个小图标（Load Maven Changes）。单击该按钮后，问题就解决了。</span><br></pre></td></tr></table></figure><hr><blockquote><p><code>Error:(3, 29) java: 程序包org.junit.jupiter.api不存在</code></p></blockquote><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">https://blog.csdn.net/littlehaes/article/details/104088317</span><br></pre></td></tr></table></figure><blockquote><p><code>&#39;parent.relativePath&#39; of POM com.qianbao:hermes_account_service:1.0.0-SNAPSHOT (/Users/wangyonglin/company/blyl/codes/codespackage_foruse/hermes_account_service_v1/pom.xml) points at com.qianbao:hermes_account_service instead of org.springframework.boot:spring-boot-starter-parent, please verify your project structure</code></p></blockquote><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">https://zhuanlan.zhihu.com/p/453547775</span><br></pre></td></tr></table></figure><h1 id="第二个error"><a href="#第二个error" class="headerlink" title="第二个error"></a>第二个error</h1><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">***************************</span><br><span class="line">APPLICATION FAILED TO START</span><br><span class="line">***************************</span><br><span class="line"></span><br><span class="line">Description:</span><br><span class="line"></span><br><span class="line">Web server failed to start. Port 8080 was already in use.</span><br><span class="line"></span><br><span class="line">Action:</span><br><span class="line"></span><br><span class="line">Identify and stop the process that&#x27;s listening on port 8080 or configure this application to listen on another port.</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">Process finished with exit code 1</span><br></pre></td></tr></table></figure><p>第二个问题我给每个文件夹配置了不同的端口，暂时解决了<br>后来又尝试了另一种做法，结束占用8080端口的任务，也解决了，占用8080端口的是tomcat<br><code>https://blog.csdn.net/Coder_ljw/article/details/129332755</code></p><p>第一个问题好像是因为tomcat版本不对，我重新配置了tomcat，但目前端口不对，我先试一下改端口号，改端口号不行，仍然显示同样的错误。<br>我在StackOverflow上提交了问题，希望有用，没等到回答</p><blockquote><p>重新下载renren-fast并导入，跟着视频一步步做，终于解决了</p></blockquote>]]></content>
      
      
      <categories>
          
          <category> Freemall </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Freemall </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>pictr</title>
      <link href="/2023/04/14/pictr/"/>
      <url>/2023/04/14/pictr/</url>
      
        <content type="html"><![CDATA[<p><img src="https://s1.wallpapermaiden.com/image/2023/01/08/red-eyes-wink-pointy-ears-vampire-crescent-wings-anime-girl-anime-53264.jpeg" alt="图片加载失败" title="壁纸"></p><p><img src="https://www.google.com/imgres?imgurl=https://upload.wikimedia.org/wikipedia/commons/thumb/e/e7/Everest_North_Face_toward_Base_Camp_Tibet_Luca_Galuzzi_2006.jpg/270px-Everest_North_Face_toward_Base_Camp_Tibet_Luca_Galuzzi_2006.jpg&tbnid=tiz4kC8bF4l3LM&vet=12ahUKEwjR-YOszqn-AhWA8rsIHT1oAwAQMygAegUIARC-AQ..i&imgrefurl=https://zh.wikipedia.org/wiki/%25E7%258F%25A0%25E7%25A9%2586%25E6%259C%2597%25E7%2591%25AA%25E5%25B3%25B0&docid=H7j-p9vjqtKRLM&w=270&h=180&q=%E7%8F%A0%E7%A9%86%E6%9C%97%E7%8E%9B%E5%B3%B0&ved=2ahUKEwjR-YOszqn-AhWA8rsIHT1oAwAQMygAegUIARC-AQ" alt="图片加载失败" title="壁纸"></p><img decoding="async" src="https://s1.wallpapermaiden.com/image/2023/01/08/medicine-melancholy-touhou-lying-down-red-eyes-doll-anime-53262.jpeg" width="20%"><p><img src="http://static.runoob.com/images/runoob-logo.png" alt="RUNOOB 图标"></p><p><img src="/pictr/medicine-melancholy-touhou-lying-down-red-eyes-doll-anime-53262.jpeg" alt="图片加载失败"></p><p><img src="http://static.runoob.com/images/runoob-logo.png" alt="RUNOOB 图标"></p><p><img src="/source/_posts/pictr/futuristic-city-industrial-skyscrapers-sci-fi-53198.jpeg" alt="图片加载失败"></p><p><img src="http://static.runoob.com/images/runoob-logo.png" alt="RUNOOB 图标"></p><p><img src="/./pictr/medicine-melancholy-touhou-lying-down-red-eyes-doll-anime-53262.jpeg" alt="图片加载失败"></p><p><img src="https://t7.baidu.com/it/u=2168645659,3174029352&fm=193&f=GIF" alt="RUNOOB 图标"></p><p><img src="https://cdn.mos.cms.futurecdn.net/NddgAz7AfjNsbsPiM72Ek6-1600-80.jpg.webp" alt="RUNOOB 图标"></p><p><img src="http://static.runoob.com/images/runoob-logo.png" alt="RUNOOB 图标"></p><p><img src="https://s1.wallpapermaiden.com/image/2023/01/01/demon-cityscape-wings-mountains-fantasy-53158-resized.jpeg" alt="RUNOOB 图标"></p><p><img src="http://static.runoob.com/images/runoob-logo.png" alt="RUNOOB 图标"></p><p><a href="https://cdn.pixabay.com/photo/2018/01/14/23/12/nature-3082832_1280.jpg">https://cdn.pixabay.com/photo/2018/01/14/23/12/nature-3082832_1280.jpg</a></p><p><img src="https://cdn.pixabay.com/photo/2018/01/14/23/12/nature-3082832_1280.jpg" alt="pipi"></p><p><img src="http://static.runoob.com/images/runoob-logo.png" alt="RUNOOB 图标"></p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>大功告成</title>
      <link href="/2023/04/14/%E5%A4%A7%E5%8A%9F%E5%91%8A%E6%88%90/"/>
      <url>/2023/04/14/%E5%A4%A7%E5%8A%9F%E5%91%8A%E6%88%90/</url>
      
        <content type="html"><![CDATA[<p>《渡荆门送别》</p><p>渡远荆门外，来从楚国游。山随平野尽，江入大荒流。月下飞天镜，云生结海楼。仍怜故乡水，万里送行舟。渡远荆门外，来从楚国游。山随平野尽，江入大荒流。月下飞天镜，云生结海楼。仍怜故乡水，万里送行舟。</p><p>渡远荆门外，来从楚国游。山随平野尽，江入大荒流。<br>月下飞天镜，云生结海楼。仍怜故乡水，万里送行舟。渡远荆门外，来从楚国游。山随平野尽，江入大荒流。月下飞天镜，云生结海楼。仍怜故乡水，万里送行舟。</p><p>山随平野尽，江入大荒流。</p><p>月下飞天镜，云生结海楼。</p><p>仍怜故乡水，万里送行舟。</p><blockquote><p>This is a blockquote with two paragraphs. Lorem ipsum dolor sit amet,<br>consectetuer adipiscing elit. Aliquam hendrerit mi posuere lectus.<br>Vestibulum enim wisi, viverra nec, fringilla in, laoreet vitae, risus.</p><p>Donec sit amet nisl. Aliquam semper ipsum sit amet velit. Suspendisse<br>id sem consectetuer libero luctus adipiscing.</p></blockquote><blockquote><p>This is a blockquote with two paragraphs. Lorem ipsum dolor sit amet,<br>consectetuer adipiscing elit. Aliquam hendrerit mi posuere lectus.<br>Vestibulum enim wisi, viverra nec, fringilla in, laoreet vitae, risus.</p></blockquote><blockquote><p>Donec sit amet nisl. Aliquam semper ipsum sit amet velit. Suspendisse<br>id sem consectetuer libero luctus adipiscing.</p></blockquote><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line">#include&lt;iostream&gt;</span><br><span class="line">using namespace std;</span><br><span class="line">class Person</span><br><span class="line">&#123;</span><br><span class="line">public:</span><br><span class="line">Person()</span><br><span class="line">&#123;</span><br><span class="line">cout &lt;&lt; &quot;调用构造函数&quot; &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line">~Person()//对象销毁前，自动调用</span><br><span class="line">&#123;</span><br><span class="line">cout &lt;&lt; &quot;析构函数的调用&quot; &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line">&#125;;</span><br><span class="line">void test()</span><br><span class="line">&#123;</span><br><span class="line">//创建对象</span><br><span class="line">Person  p;//这是一个局部变量，test执行完毕后会释放该对象 进而调用析构函数</span><br><span class="line">&#125;</span><br><span class="line">int main()</span><br><span class="line">&#123;</span><br><span class="line">Person  p1;//如果在main函数创建对象，析构函数会在按任意键后再调用</span><br><span class="line">test();</span><br><span class="line">system(&quot;pause&quot;);</span><br><span class="line">return 0;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><code>hello</code></p><p><code>he</code></p><p><img src="https://s1.wallpapermaiden.com/image/2023/01/08/red-eyes-wink-pointy-ears-vampire-crescent-wings-anime-girl-anime-53264.jpeg" alt="图片加载失败" title="壁纸"></p><p><img src="https://www.google.com/imgres?imgurl=https://upload.wikimedia.org/wikipedia/commons/thumb/e/e7/Everest_North_Face_toward_Base_Camp_Tibet_Luca_Galuzzi_2006.jpg/270px-Everest_North_Face_toward_Base_Camp_Tibet_Luca_Galuzzi_2006.jpg&tbnid=tiz4kC8bF4l3LM&vet=12ahUKEwjR-YOszqn-AhWA8rsIHT1oAwAQMygAegUIARC-AQ..i&imgrefurl=https://zh.wikipedia.org/wiki/%25E7%258F%25A0%25E7%25A9%2586%25E6%259C%2597%25E7%2591%25AA%25E5%25B3%25B0&docid=H7j-p9vjqtKRLM&w=270&h=180&q=%E7%8F%A0%E7%A9%86%E6%9C%97%E7%8E%9B%E5%B3%B0&ved=2ahUKEwjR-YOszqn-AhWA8rsIHT1oAwAQMygAegUIARC-AQ" alt="图片加载失败" title="壁纸"></p><img decoding="async" src="https://s1.wallpapermaiden.com/image/2023/01/08/medicine-melancholy-touhou-lying-down-red-eyes-doll-anime-53262.jpeg" width="20%">]]></content>
      
      
      <categories>
          
          <category> 2019 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 2013 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>今天</title>
      <link href="/2023/04/14/%E4%BB%8A%E5%A4%A9/"/>
      <url>/2023/04/14/%E4%BB%8A%E5%A4%A9/</url>
      
        <content type="html"><![CDATA[<h2 id="hello"><a href="#hello" class="headerlink" title="hello"></a>hello</h2><p>nihaoakfnknkg</p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>Hello World</title>
      <link href="/2023/04/14/hello-world/"/>
      <url>/2023/04/14/hello-world/</url>
      
        <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>Docker安装</title>
      <link href="/2023/04/14/Docker%E5%AE%89%E8%A3%85/"/>
      <url>/2023/04/14/Docker%E5%AE%89%E8%A3%85/</url>
      
        <content type="html"><![CDATA[<p>#Docker容器文件挂载和端口映射</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">docker run -p 3306:3306 --name mysql \</span><br><span class="line">-v /mydata/mysql/log:/var/log/mysql \</span><br><span class="line">-v /mydata/mysql/data:/var/lib/mysql \</span><br><span class="line">-v /mydata/mysql/conf:/etc/mysql \</span><br><span class="line">-e MYSQL_ROOT_PASSWORD=root \</span><br><span class="line">-d mysql:5.7</span><br><span class="line">参数说明</span><br><span class="line">-p 3306:3306：将容器的 3306 端口映射到主机的 3306 端口</span><br><span class="line">-v /mydata/mysql/conf:/etc/mysql：将配置文件夹挂载到主机</span><br><span class="line">-v /mydata/mysql/log:/var/log/mysql：将日志文件夹挂载到主机</span><br><span class="line">-v /mydata/mysql/data:/var/lib/mysql/：将配置文件夹挂载到主机-e MYSQL_ROOT_PASSWORD=root：初始化 root 用户的密码</span><br></pre></td></tr></table></figure><p>这里有报错，使用<code>docker logs -f &lt;container ID&gt;</code>查看日志，发现</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">2023-04-15 13:31:09+00:00 [Note] [Entrypoint]: Entrypoint script for MySQL Server 5.7.41-1.el7 started.</span><br><span class="line">2023-04-15 13:31:09+00:00 [ERROR] [Entrypoint]: mysqld failed while attempting to check config</span><br><span class="line">command was: mysqld --verbose --help --log-bin-index=/tmp/tmp.F82QFTNxFF</span><br><span class="line">mysqld: Can&#x27;t read dir of &#x27;/etc/mysql/conf.d/&#x27; (Errcode: 2 - No such file or directory)</span><br><span class="line">mysqld: [ERROR] Fatal error in defaults handling. Program aborted!</span><br></pre></td></tr></table></figure><p>修改配置文件的docker容器目录解决问题解决问题</p><p><strong>容器和容器之间相互隔离，相当于一个独立的运行环境</strong></p><p>访问容器内部：<br><code>docker exec -it mysql /bin/bash</code><br>这里还有另一种直接进入的方法<br><code>docker exec -it redis redis-cli</code><br>查看运行的容器<br><code>docker ps</code></p><p>1.查看所有运行中的容器 <code>docker ps</code>；<br>2.停止容器运行 <code>docker stop &lt;container-id&gt;</code>；<br>3.删除这个容器 <code>docker rm &lt;container-id&gt;</code>；<br>4.删除这个镜像 <code>docker rmi &lt;image-id&gt;</code>。</p>]]></content>
      
      
      <categories>
          
          <category> Freemall </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Docker </tag>
            
            <tag> Freemall </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
